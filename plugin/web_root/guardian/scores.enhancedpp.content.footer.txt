~[if#1.pref.ppscores~(curschoolid)=1][else#1]
<div class="box-round" id="assignmentScores" style="display:none">
<h2>~[text:psx.htmlc.guardian.epp.assignment_scores]</h2>
  <table border="0" cellpadding="0" cellspacing="0" align="center" width="99%">
    <tr>
      <th>~[text:psx.html.guardian.scores.due_date]</th>
      <th>~[text:psx.html.guardian.scores.category]</th>
      <th>~[text:psx.html.guardian.scores.assignment]</th>
      <th>~[text:psx.htmlc.guardian.epp.standard]</th>
      <th class="center">~[text:psx.html.guardian.scores.score]</th>
      <th class="center">~[if#suppresspct.~[dbval;table=termbins;field=SuppressPercentScr]=0]%[/if#suppresspct]</th>
      <th class="center">~[if#suppressltr.~[dbval;table=termbins;field=suppressltrgrd]#true]~[text:psx.html.guardian.scores.grd][/if#suppressltr]</th>
      <th class="center" colspan="5">~[text:psx.html.guardian.scores.codes]</th>
    </tr>
~[tlist_sql;
select
case when a=1 then
'<tr class="'||altcolor||'">
<td>'||to_char(B,'MM/DD/YYYY')||'</td>
<td>'||C||'</td>
<td>'||D||'</td>
<td></td>
<td align="center">'||F||'</td>
<td align="center">'||G||'</td>
<td align="center">'||H||'</td>
<td width="19"><img class="indicator" style="display'||chr(58)||I||'" src="'||'/images/icon_check.gif"></td>
<td width="19"><img class="indicator" style="display'||chr(58)||J||'" src="'||'/images/icon_late.gif"></td>

<td width="19"><img class="indicator" style="display'||chr(58)||K||'" src="'||'/images/icon_missing.gif"></td>
<td width="19"><img class="indicator" style="display'||chr(58)||L||'" src="'||'/images/icon_exempt.gif"></td>
<td width="19"><img class="indicator" style="display'||chr(58)||M||'" src="'||'/images/icon_excluded.gif"></td></tr>'
when a=2 then
'<tr><td colspan="3" bgcolor="#F0F0F0"></td>
<td colspan="3" bgcolor="#F0F0F0">'||E||'</td>
<td align="center" bgcolor="#F0F0F0">'||H||'</td>
<td width="19" bgcolor="#F0F0F0"><img class="indicator" style="display'||chr(58)||I||'" src="'||'/images/icon_check.gif"></td>
<td width="19" bgcolor="#F0F0F0"><img class="indicator" style="display'||chr(58)||J||'" src="'||'/images/icon_late.gif"></td>
<td width="19" bgcolor="#F0F0F0"><img class="indicator" style="display'||chr(58)||K||'" src="'||'/images/icon_missing.gif"></td>
<td width="19" bgcolor="#F0F0F0"><img class="indicator" style="display'||chr(58)||L||'" src="'||'/images/icon_exempt.gif"></td>
<td width="19" bgcolor="#F0F0F0"><img class="indicator" style="display'||chr(58)||M||'" src="'||'/images/icon_excluded.gif"></td></tr>'
end asmt_output
from
(SELECT case when mod(rownum,2) = 1 then 'oddRow' else '' end altcolor, a,b,c,csort,d,dsort,e,f,g,h,i,j,k,l,m from (SELECT
1 a,
PGA.DATEDUE b,
case when pgc.description is not null then '<a href="categorydescr.html?frn=094'||pgc.dcid||'" />'||pgc.name||'</a>' else pgc.name end c,
pgc.name csort,
case when pga.description is not null then '<a href="asmtdescr.html?frn=092'||pga.dcid||'" />'||pga.name||'</a>' else pga.name end d,
pga.name dsort,
null e,
CASE WHEN pga.PUBLISHSCORES != 0 THEN (case when ssa.comment_value is not null then '<a href="javascript'||chr(58)||'alertcommentwindow('||cc.studentid||','||sec.id||','||pga.id||')">'||to_char(ssa.SCORE)||'</a>' else to_char(ssa.SCORE) end) ||'/'|| to_char(pga.POINTSPOSSIBLE) ELSE 'Score Not Published' END f,
CASE WHEN pga.PUBLISHSCORES != 0 AND TB.SUPPRESSPERCENTSCR = 0 THEN case when ssa.percent is null then ' ' ELSE to_char(ssa.percent)||chr(37) END ELSE '' END g,
CASE WHEN pga.PUBLISHSCORES != 0 AND TB.SUPPRESSLTRGRD = 0 THEN ssa.grade ELSE '' END h,
(case when NVL(psmas.TURNEDIN,0) = 1 then 'inline' ELSE 'none' END) i,
(case when NVL(psmas.TURNEDINLATE,0) = 1 then 'inline' ELSE 'none' END) j,
(case when NVL(psmas.ISMISSING,0) = 1 then 'inline' ELSE 'none' END) k,
(case when NVL(psmas.EXEMPT,0) = 1 then 'inline' ELSE 'none' END) l,
(case when PGA.INCLUDEINFINALGRADES = 0 then 'inline' ELSE 'none' END) m
FROM CC
~[if#sgcg.~(frn)=031@]inner join storedgrades sg on abs(cc.sectionid)=abs(sg.sectionid) and cc.studentid = sg.studentid and sg.dcid = ~(rn)[/if#sgcg]
INNER JOIN PGAssignments PGA on cc.sectionid = pga.sectionid
  and pga.datedue >= (SELECT min(date1) from termbins where schoolid=~(schoolid)
  and termid=~(termid)
  and upper(storecode)=upper('~[gpv:fg]')
  )
  and pga.datedue <= (SELECT max(date2) from termbins where schoolid=~(schoolid)
  and termid=~(termid)
  and upper(storecode)=upper('~[gpv:fg]')
  )
  	AND CASE
			WHEN PGA.PUBLISHSTATE = 1 THEN PGA.PUBLISHONSPECIFICDATE
			WHEN PGA.PUBLISHSTATE = 2 THEN (PGA.DATEDUE - PGA.PUBLISHDAYSBEFOREDUE)
			WHEN PGA.PUBLISHSTATE = 3 THEN PGA.DATEDUE
			WHEN PGA.PUBLISHSTATE = 4 THEN to_date('12/31/9999','MM/DD/YYYY')
			ELSE to_date('01/01/1900','MM/DD/YYYY') END <= SYSDATE
	AND pga.datedue between CC.dateenrolled and cc.dateleft-1
INNER JOIN SYNC_SECTIONENROLLMENTMAP sync_cc on cc.dcid = sync_cc.ccdcid and CC.studentid = ~(curstudid)
INNER JOIN SECTIONS sec on CC.sectionid = sec.id
INNER JOIN COURSES c on sec.course_number = c.course_number
INNER JOIN PGCategories PGC on pga.pgcategoriesid = pgc.id
INNER JOIN TermBins TB on sec.termid=tb.termid and sec.schoolid=tb.schoolid and upper(tb.storecode) = upper('~[gpv:fg]')
LEFT OUTER JOIN SYNC_PGASSIGNMENTSMAP sync_pga on pga.dcid = sync_pga.pgassignmentsdcid
LEFT OUTER JOIN PSM_ASSIGNMENTSCORE PSMAS ON sync_pga.sectionassignmentid = psmas.sectionassignmentid and sync_cc.sectionenrollmentid = psmas.sectionenrollmentid
LEFT OUTER JOIN SECTIONSCORESID SSI ON sec.id = ssi.sectionid and cc.studentid = ssi.studentid
LEFT OUTER JOIN SECTIONSCORESASSIGNMENTS SSA ON pga.id = ssa.assignment and ssi.dcid = ssa.fdcid
WHERE
~[if#sgcg.~(frn)=031@][ELSE#sgcg]cc.dcid = ~(rn) and[/if#sgcg]
CASE WHEN PSMAS.EXEMPT != 1 THEN 1
     WHEN PSMAS.EXEMPT = 1 and (PSMAS.SCORE is null or PSMAS.ACTUALSCOREENTERED is null) THEN 2 ELSE 1 END = 1
order by b,csort,dsort,a,e)
union all
SELECT
null altcolor,
2 a,
PGA.DATEDUE b,
pgc.name c,
pgc.name csort,
pga.name d,
pga.name dsort,
psm_s.name e,
null f,
null g,
psm_ass.actualscoreentered h,
(case when NVL(psm_ass.TURNEDIN,0) = 1 then 'inline' ELSE 'none' END) i,
(case when NVL(psm_ass.TURNEDINLATE,0) = 1 then 'inline' ELSE 'none' END) j,
(case when NVL(psm_ass.ISMISSING,0) = 1 then 'inline' ELSE 'none' END) k,
(case when NVL(psm_ass.EXEMPT,0) = 1 then 'inline' ELSE 'none' END) l,
'none' m
FROM CC
~[if#sgcg.~(frn)=031@]inner join storedgrades sg on abs(cc.sectionid)=abs(sg.sectionid) and cc.studentid = sg.studentid and sg.dcid = ~(rn)[/if#sgcg]
INNER JOIN PGAssignments PGA on cc.sectionid = pga.sectionid
  and pga.datedue >= (SELECT min(date1) from termbins where schoolid=~(schoolid)
  and termid=~(termid)
  and upper(storecode)=upper('~[gpv:fg]')
  )
  and pga.datedue <= (SELECT max(date2) from termbins where schoolid=~(schoolid)
  and termid=~(termid)
  and upper(storecode)=upper('~[gpv:fg]')
  )
		AND CASE
			WHEN PGA.PUBLISHSTATE = 1 THEN PGA.PUBLISHONSPECIFICDATE
			WHEN PGA.PUBLISHSTATE = 2 THEN (PGA.DATEDUE - PGA.PUBLISHDAYSBEFOREDUE)
			WHEN PGA.PUBLISHSTATE = 3 THEN PGA.DATEDUE
			WHEN PGA.PUBLISHSTATE = 4 THEN to_date('12/31/9999','MM/DD/YYYY')
			ELSE to_date('01/01/1900','MM/DD/YYYY') END <= SYSDATE
		AND pga.datedue between CC.dateenrolled and cc.dateleft-1
INNER JOIN PGCategories PGC on pga.pgcategoriesid = pgc.id
INNER JOIN SYNC_SECTIONENROLLMENTMAP sync_cc on cc.dcid = sync_cc.ccdcid and CC.studentid =~(curstudid)
INNER JOIN SECTIONS sec on CC.sectionid = sec.id
INNER JOIN COURSES c on sec.course_number = c.course_number
INNER JOIN SYNC_PGASSIGNMENTSMAP sync_pga on pga.dcid = sync_pga.pgassignmentsdcid
INNER JOIN PSM_ASSIGNMENTSTANDARD PSM_AS on sync_pga.sectionassignmentid = psm_as.sectionassignmentid
INNER JOIN PSM_ASSIGNMENTSTANDARDSCORE PSM_ASS on sync_cc.sectionenrollmentid = PSM_ASS.sectionenrollmentid and psm_as.id=psm_ass.assignmentstandardid
INNER JOIN PSM_STANDARD PSM_S on psm_as.standardid=psm_s.id
LEFT OUTER JOIN PSM_ASSIGNMENTSCORE PSMAS ON sync_pga.sectionassignmentid = psmas.sectionassignmentid and sync_cc.sectionenrollmentid = psmas.sectionenrollmentid
WHERE
~[if#sgcg.~(frn)=031@][ELSE#sgcg]cc.dcid = ~(rn) and[/if#sgcg]
CASE WHEN PSMAS.EXEMPT != 1 THEN 1
     WHEN PSMAS.EXEMPT = 1 and (PSMAS.SCORE is null or PSMAS.ACTUALSCOREENTERED is null) THEN 2 ELSE 1 END = 1
order by b,csort,dsort,a,e)]
~(asmt_output)[/tlist_sql]

	</table>
</div>
[/if#1]

~[if#scorewght.pref.ppscoreswght~(schoolid)=1][else#scorewght]
<div class="box-round" id="specialWeighting" style="display:none">
<h2>~[text:psx.htmlc.guardian.epp.special_weighting]</h2>
~[tlist_sql;
SELECT
  prt.Name prtName,
  prt.termsort,
  pfgs.FinalGradeSetupType,
  weights.GradingFormulaWeightingType,
  case when weights.GradingFormulaWeightingType='AssignmentBasedWeighting' then pa.name else weights.Name end catName,
  weights.Weighting,
  weights.LowScoresToDiscard
FROM PSM_SECTION psec
  inner join sync_sectionmap ssm on psec.id=ssm.sectionid
  inner join Sections sec on ssm.sectionsdcid=sec.dcid and sec.id=~(sectionid)
  INNER JOIN PSM_TERM pter ON psec.TermID = pter.ID
  INNER JOIN (SELECT
				level termsort, to_number(NVL(replace(Sys_connect_by_path(termid, 'X'),'X',''),'0')) termid, ID, StartDate, EndDate, Name
				FROM PSM_REPORTINGTERM
				START WITH PARENTREPORTINGTERMID is null
				CONNECT BY PRIOR id = PARENTREPORTINGTERMID) prt ON pter.ID = prt.TermID
  LEFT OUTER JOIN PSM_FINALGRADESETUP pfgs ON psec.ID = pfgs.SectionID AND prt.ID = pfgs.ReportingTermID
  LEFT OUTER JOIN (
	SELECT pgf.ID,
	  pgf.ContentGroupID,
	  pgfw.GradingFormulaWeightingType,
	  pgfw.Weighting,
	  pgfw.lowScoresToDiscard,
	  CASE WHEN pgfw.AssignmentCategoryID is null THEN prt.Name ELSE pac.Name END Name,
    pgfw.assignmentid
	FROM PSM_GRADINGFORMULA pgf
	  INNER JOIN PSM_GRADINGFORMULAWEIGHTING pgfw ON pgf.ID = pgfw.ParentGradingFormulaID
	  LEFT OUTER JOIN PSM_ASSIGNMENTCATEGORY pac ON pgfw.AssignmentCategoryID = pac.ID
	  LEFT OUTER JOIN PSM_REPORTINGTERM prt ON  pgfw.ReportingTermID = prt.ID
	) weights ON pfgs.GradingFormulaID = weights.ID
  left outer join psm_assignment pa on weights.assignmentid=pa.id
ORDER BY prt.startdate, prt.termsort, prt.Name, weights.Name]
<div style="display:none" class="setupdiv" data-prtname="~(prtname;t)" data-termsort="~(termsort;l)" data-fgst="~(fgst;t)" data-wt="~(wt;t)" data-catname="~(catName;t)" data-w="~(w;t)" data-ls="~(ls;t)"></div>
[/tlist_sql]
</div>
[/if#scorewght]

<script language="JavaScript">
$j(document).ready(function(){
    ~[if#1.pref.ppscores~(curschoolid)=1]
	$j('div#content-main table,div#content-main div.comment,div#content-main p,div#legend').remove();
    $j('div#content-main h1:first').text('~[text:psx.htmlc.guardian.epp.class_score_not_available]').after(
		'<div class="box-round">\
		 <p>~[text:psx.htmlc.guardian.epp.info_not_available_current_std]</p>\
		 <div class="button-row"><a href="javascript:history.go(-1)" id="btnBack" class="button" name="btnBack">~[text:psx.htmlc.guardian.epp.back]</a></div>\
		</div>'
	);
    [else#1]
	$j('div#content-main table:eq(1)').remove();
    $j('div#content-main h1:first').after('<div class="box-round" id="classDetail"><h2></h2></div>');
	$j('div#classDetail h2').text( $j('h1:first').text() );
	$j('div#content-main h1:first').remove();
	$j('div#classDetail').append( $j('div#content-main table:first,div#content-main div.comment,div#content-main p:lt(2)') );
	$j('div#assignmentScores').insertAfter( $j('div#classDetail') ).show();

	$j('div#specialWeighting div.setupdiv').each(function(){
		var sc = $j(this).data('prtname'),
			ts = +($j(this).data('termsort')),
			ts2 = ts - 1,
			fgst = $j(this).data('fgst'),
			wt = $j(this).data('wt'),
			catname = $j(this).data('catname'),
			w = $j(this).data('w'),
			ls = $j(this).data('ls'),
			hrow = '';

		if ( $j('div#specialWeighting table.'+sc).length == 0 ) {
			if (fgst != 'TotalPoints') {
				if (wt == 'CategoryBasedWeighting') { hrow = '<th>~[text:psx.htmlc.guardian.epp.name]</th><th>~[text:psx.htmlc.guardian.epp.weight] %</th><th>~[text:psx.htmlc.guardian.epp.low_scores_discard]</th>'; }
				if ((wt == 'TermBasedWeighting')||(wt == 'AssignmentBasedWeighting')) { hrow = '<th>~[text:psx.htmlc.guardian.epp.name]</th><th>~[text:psx.htmlc.guardian.epp.weight] %</th>'; }
			}
			if (ts == 1) {
				$j('div#specialWeighting').append('<div class="box-round" data-ts="'+ts+'"><table class="'+sc+'"><thead><tr><th>~[text:psx.htmlc.guardian.epp.term] '+sc+'</th>'+hrow+'</tr></thead><tbody></tbody></table></div>');
			} else {
				$j('div#specialWeighting div.box-round[data-ts="'+ts2+'"]:last').append('<div class="box-round" data-ts="'+ts+'"><table class="'+sc+'"><thead><tr><th>~[text:psx.htmlc.guardian.epp.term] '+sc+'</th>'+hrow+'</tr></thead><tbody></tbody></table></div>');
			}
		}
		if (fgst == 'TotalPoints') {
			$j('div#specialWeighting table.'+sc+' tbody').append( '<tr><td>~[text:psx.htmlc.guardian.epp.total_points]</td></tr>' );
		} else if (wt == 'CategoryBasedWeighting') {
			$j('div#specialWeighting table.'+sc+' tbody').append( '<tr><td>~[text:psx.htmlc.guardian.epp.category_based]</td><td>'+catname+'</td><td>'+w+'</td><td>'+ls+'</td></tr>' );
		} else if (wt == 'TermBasedWeighting') {
			$j('div#specialWeighting table.'+sc+' tbody').append( '<tr><td>~[text:psx.htmlc.guardian.epp.term_based]</td><td>'+catname+'</td><td>'+w+'</td></tr>' );
		} else {
			$j('div#specialWeighting table.'+sc+' tbody').append( '<tr><td>~[text:psx.htmlc.guardian.epp.assignment_based]</td><td>'+catname+'</td><td>'+w+'</td></tr>' );
		}

	});

	$j('div#specialWeighting').insertAfter( $j('div#assignmentScores') ).show();

    [/if#1]


    $j('input#activeNav').after( '<input id="activePageVersion" type="hidden" value="5.0.0"/>' );
});
</script>
